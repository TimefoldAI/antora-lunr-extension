workflow:
  rules:
  # Never run on docs branches (i.e., branches whose name begins with docs/)
  - if: >-
      ($CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^docs\//) ||
      ($CI_COMMIT_BRANCH && $CI_COMMIT_BRANCH =~ /^docs\//)
    when: never
  # Only run on branches and MRs while preventing duplicate pipelines (i.e., does not run on fork if there's an open MR)
  # See https://docs.gitlab.com/ee/ci/yaml/workflow.html#switch-between-branch-pipelines-and-merge-request-pipelines
  - if: ($CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS == null) || $CI_PIPELINE_SOURCE == "merge_request_event"
variables:
  GIT_DEPTH: '5'
  LINUX_DISTRO: bullseye
  NPM_CONFIG_CACHE: &npm_cache_dir .cache/npm
default:
  interruptible: true
.npm:
  image: node:16-$LINUX_DISTRO
  stage: test
  before_script:
  - node -p '`${os.type()} ${os.release()}\nNode.js ${process.version}`'
  - npm ci --no-fund --prefer-offline --quiet
  cache: &npm_cache
    key: npm-cache
    paths:
    - *npm_cache_dir
    policy: pull
  script: npm test
lint:
  extends: .npm
  stage: .pre
  cache:
    <<: *npm_cache
    policy: pull-push
  script:
  - npm run lint
  - |
    if [ -n "$(npm --silent run format && git --no-pager diff --name-only)" ]; then
      git --no-pager diff
      false
    fi
test:node-16-linux:
  extends: .npm
  script:
  - npm run coverage
  coverage: '/^All files *[|] *([0-9.]+) *[|]/'
  artifacts:
    when: always
    expose_as: coverage-report
    paths:
    - reports/lcov-report
    reports:
      cobertura: reports/cobertura-coverage.xml
      junit: reports/tests-xunit.xml
test:node-17-linux:
  extends: .npm
  image: node:17-$LINUX_DISTRO
