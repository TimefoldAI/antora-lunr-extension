workflow:
  rules:
  - if: $CI_PIPELINE_SOURCE == 'merge_request_event' || $CI_PIPELINE_SOURCE == 'schedule' || $CI_PIPELINE_SOURCE == 'web'
  # See https://docs.gitlab.com/ee/ci/yaml/workflow.html#switch-between-branch-pipelines-and-merge-request-pipelines
  - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS == null && $CI_COMMIT_BRANCH !~ /^docs\//
variables:
  GIT_DEPTH: '5'
  DEFAULT_NODE_VERSION: '16'
  LINUX_DISTRO: bullseye
  NPM_CONFIG_CACHE: &npm_cache_dir .cache/npm
  NPM_CONFIG_FUND: 'false'
  NPM_CONFIG_PREFER_OFFLINE: 'true'
  RELEASE_VERSION:
    value: ''
    description: The version to release from the selected protected branch if the build succeeds. To enable, specify an exact version or increment keyword.
default:
  image: node:$DEFAULT_NODE_VERSION-$LINUX_DISTRO
  interruptible: true
.rules:
- &if_docs_mr
  rules:
  - if: &docs_mr $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^docs\//
- &unless_docs_mr
  rules:
  - if: *docs_mr
    when: never
  - if: $CI_JOB_NAME == 'lint' && $CI_PIPELINE_SOURCE == 'push' && $CI_PROJECT_PATH != 'antora/antora-lunr-extension'
    when: manual
  - when: on_success
- &if_release
  rules:
  - if: $CI_PIPELINE_SOURCE == 'web' && $CI_PROJECT_PATH == 'antora/antora-lunr-extension' && $CI_COMMIT_BRANCH && $CI_COMMIT_REF_PROTECTED && $RELEASE_VERSION
.npm:
  stage: test
  <<: *unless_docs_mr
  before_script:
  - node -p '`${os.type()} ${os.release()}\nNode.js ${process.version}`'
  - npm ci --quiet
  cache: &npm_cache
    key: npm-cache
    paths:
    - *npm_cache_dir
    policy: pull
  script:
  - npm test
# this job also seeds the dependency cache
lint:
  extends: .npm
  stage: .pre
  cache:
    <<: *npm_cache
    policy: pull-push
  script:
  - npm run lint
  - if [ -n "$(npm --silent run format && git --no-pager diff --name-only)" ]; then git --no-pager diff && false; fi
# this job signals success to the MR UI
docs:
  stage: test
  <<: *if_docs_mr
  script: echo 'we love docs!'
test:node-16-linux:
  extends: .npm
  script:
  - npm run coverage
  coverage: '/^All files *[|] *([0-9.]+) *[|]/'
  artifacts:
    when: always
    expose_as: coverage-report
    paths:
    - reports/lcov-report
    reports:
      coverage_report:
        coverage_format: cobertura
        path: reports/cobertura-coverage.xml
      junit: reports/tests-xunit.xml
test:node-17-linux:
  extends: .npm
  image: node:17-$LINUX_DISTRO
  artifacts:
    when: always
    reports:
      junit: reports/tests-xunit.xml
release:
  stage: deploy
  interruptible: false
  environment: releases
  <<: *if_release
  script:
  - npm/release.sh
test:windows:
  extends: .npm
  tags:
    - windows
    - exoscale
  artifacts:
    when: always
    reports:
      junit: reports/tests-xunit.xml
